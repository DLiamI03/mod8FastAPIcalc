name: FastAPI Calculator CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Install Playwright browsers
      run: |
        playwright install chromium
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    
    - name: Format check with black
      run: |
        black --check .
    
    - name: Sort imports check with isort
      run: |
        isort --check-only .
    
    - name: Type checking with mypy
      run: |
        mypy app/ --ignore-missing-imports
    
    - name: Run unit tests
      run: |
        pytest tests/test_operations.py -v --cov=app/operations --cov-report=xml
    
    - name: Start FastAPI server
      run: |
        uvicorn main:app --host 0.0.0.0 --port 8000 &
        sleep 10  # Wait for server to start
      
    - name: Check if server is running
      run: |
        curl -f http://localhost:8000/health || exit 1
    
    - name: Run integration tests
      run: |
        pytest tests/test_integration.py -v
    
    - name: Run end-to-end tests
      run: |
        pytest tests/test_e2e.py -v --browser chromium
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
    
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          htmlcov/
          coverage.xml
          pytest-report.html

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Build application
      run: |
        echo "Application built successfully"
    
    - name: Create deployment package
      run: |
        zip -r fastapi-calculator.zip . -x "*.git*" "htmlcov/*" "tests/*" "__pycache__/*"
    
    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: fastapi-calculator-build
        path: fastapi-calculator.zip

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit
    
    - name: Run safety check
      run: |
        safety check -r requirements.txt
    
    - name: Run bandit security check
      run: |
        bandit -r app/ -f json -o bandit-report.json || true
    
    - name: Upload security results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-results
        path: bandit-report.json